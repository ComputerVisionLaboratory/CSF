# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/02_esf.ipynb (unless otherwise specified).

__all__ = ['EllipticalSeparabilityFilter']

# Cell
from .core import *

# Cell

class EllipticalSeparabilityFilter:
    def __init__(self, axes_in, axes_out, angle):
        self.axes_in = axes_in
        self.axes_out = axes_out
        self.angle = angle

    def __call__(self, img):
        return seperability_filter(img, self.axes_in, self.axes_out, self.angle)

    def find_circles(self, img, num_circles=None):
        sepmap = seperability_filter(img, self.axes_in, self.axes_out, self.angle)
        sepmap[np.isnan(sepmap)]=0
        peaks = peak_local_max(sepmap)

        if num_circles is None:
            return peaks
        else:
            return peaks[:num_circles]
