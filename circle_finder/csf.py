# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_csf.ipynb (unless otherwise specified).

__all__ = ['CircularSeparabilityFilter']

# Cell
from .core import *
import numpy as np
from skimage.feature import peak_local_max

# Cell

class CircularSeparabilityFilter:
    def __init__(self, r_in, r_out):
        self.r_in = r_in
        self.r_out = r_out

    def __call__(self, img):
        return seperability_filter(img, (self.r_in, self.r_in), (self.r_out, self.r_out), angle=0)

    def find_circles(self, img, num_circles=None):
        sepmap = seperability_filter(img, (self.r_in, self.r_in), (self.r_out, self.r_out), angle=0)
        sepmap[np.isnan(sepmap)]=0
        peaks = peak_local_max(sepmap)

        if num_circles is None:
            return peaks
        else:
            return peaks[:num_circles]
